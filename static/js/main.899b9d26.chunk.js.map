{"version":3,"sources":["components/Lista.jsx","index.js"],"names":["Lista","state","data","modalopen","modalA","modalD","indexCartao","username","userid","cards","card_number","cvv","expiry_date","a","this","handleChange","bind","validForm","bodyApi","fetch","response","json","body","setState","event","target","value","user","name","id","document","querySelector","innerHTML","elemento","valor","parseInt","replace","length","worth","spanError","eventerror","toLocaleString","style","currency","parseFloat","innerText","axios","post","card","destination_user_id","then","catch","error","console","setTimeout","users","map","className","src","img","alt","onClick","openModal","display","htmlFor","onKeyPress","mask","type","placeholder","color","onChange","i","substr","Component","rootComponent","getElementById","ReactDOM","render"],"mappings":"yQAIqBA,E,4MAEjBC,MAAQ,CACJC,KAAM,GACNC,WAAY,EACZC,QAAS,EACTC,QAAS,EACTC,YAAa,IACbC,SAAU,GACVC,OAAQ,GACRC,MAAO,CAEH,CACIC,YAAa,mBACbC,IAAK,IACLC,YAAa,SAGjB,CACIF,YAAa,mBACbC,IAAK,IACLC,YAAa,W,8FAOzB,gCAAAC,EAAA,6DAGIC,KAAKC,aAAeD,KAAKC,aAAaC,KAAKF,MAC3CA,KAAKG,UAAYH,KAAKG,UAAUD,KAAKF,MAEjCI,EAAUJ,KAAKb,MAEP,mDARhB,SAU2BkB,MAFX,oDARhB,cAUUC,EAVV,gBAWuBA,EAASC,OAXhC,OAWUC,EAXV,OAYIJ,EAAQhB,KAAOoB,EACfR,KAAKS,SAASL,GAblB,iD,gFAiBA,SAAaM,GACTV,KAAKS,SAAS,CAAEjB,YAAakB,EAAMC,OAAOC,U,uBAI9C,SAAUC,GACNb,KAAKS,SAAS,CAAEpB,WAAW,EAAMI,SAAUoB,EAAKC,KAAMpB,OAAQmB,EAAKE,O,kBAIvE,WACIC,SAASC,cAAc,cAAcC,UAAY,GAEjD,IAAIC,EAAWH,SAASC,cAAc,iBAClCG,EAAQD,EAASP,MAErBQ,GAAgB,GAChBA,EAAQC,SAASD,EAAME,QAAQ,SAAU,MAEzCF,GADAA,GAAgB,IACFE,QAAQ,eAAgB,QAE5BC,OAAS,IACfH,EAAQA,EAAME,QAAQ,0BAA2B,WAErDH,EAASP,MAAQQ,EAEH,QAAVA,IACAD,EAASP,MAAQ,IAGP,SAAVQ,IACAD,EAASP,MAAQ,M,uBAOzB,WAAa,IAAD,OAEJY,EAAQR,SAASC,cAAc,iBAAiBL,MAChDa,EAAYT,SAASC,cAAc,cACnCS,GAAa,EAEH,KAAVF,IACAE,GAAa,EACbD,EAAUP,UAAY,kBAGrBQ,IAE8B,MAA3B1B,KAAKb,MAAMK,cACXgC,EAAQA,EAAMF,QAAQ,IAAK,IAAIA,QAAQ,IAAK,KAAKK,eAAe,QAAS,CAAEC,MAAO,WAAYC,SAAU,QAExGL,EAAQM,WAAWN,GACnBR,SAASC,cAAc,iBAAiBc,UAAY,UACpD/B,KAAKS,SAAS,CAAEnB,QAAQ,IAExB0C,IAAMC,KAAK,+DAEP,CACIC,KAAOlC,KAAKR,YAGZ2C,oBAAsBnC,KAAKb,MAAMO,OAGjCkB,MAAQY,IAEXY,MAAK,SAAU9B,OAEf+B,OAAM,SAAUC,GACbC,QAAQD,MAAMA,MAItBE,YAAW,WACP,EAAK/B,SAAS,CAAEnB,QAAQ,EAAOD,WAAW,MAC3C,MAGwB,MAA3BW,KAAKb,MAAMK,cACXQ,KAAKS,SAAS,CAAElB,QAAQ,IAGxBiD,YAAW,WACP,EAAK/B,SAAS,CAAElB,QAAQ,MACzB,S,oBAIf,WAAU,IAAD,OAECkD,EAAQzC,KAAKb,MAAMC,KAEzB,OACI,qCACI,8BAAOqD,EAAMC,KAAI,SAAC7B,GAAD,OACb,qBAAK8B,UAAU,gBAAf,SACI,oBAAGA,UAAU,YAAb,UACI,oBAAGA,UAAU,eAAb,UAA4B,sBAAKA,UAAU,SAAf,UAAwB,0CAAuB9B,EAAKE,MAAS,qBAAK4B,UAAU,MAAMC,IAAK/B,EAAKgC,IAAKC,IAAI,KAC7H,qBAAKH,UAAU,WAAf,SAA0B,uCAAU9B,EAAKpB,SAAf,YAE9B,oBAAGkD,UAAU,KAAb,oBAA0B9B,EAAKC,QAC/B,qBAAK6B,UAAU,YAAf,SACI,wBAAQI,QAAS,kBAAM,EAAKC,UAAUnC,IAAO8B,UAAU,SAAvD,+BAOhB,qBAAKI,QAAS,WAAQ,EAAKtC,SAAS,CAAEpB,WAAW,EAAOC,QAAQ,EAAOC,QAAQ,KAAYqC,MAAO,CAAEqB,QAASjD,KAAKb,MAAME,UAAY,QAAU,QAAUsD,UAAU,aAGlK,sBAAKf,MAAO,CAAEqB,QAASjD,KAAKb,MAAME,UAAY,OAAS,QAAUsD,UAAU,aAA3E,UACI,wBAAOA,UAAU,kBAAjB,sBAA6C3C,KAAKb,MAAMM,YACxD,sBAAKkD,UAAU,eAAf,UACI,uBAAOO,QAAQ,eAAf,gCAAwD,uBACxD,uBAAOC,WAAYnD,KAAKoD,KAAMrC,GAAG,eAAesC,KAAK,OAAOC,YAAY,0BAE5E,qBAAK1B,MAAO,CAAE2B,MAAO,OAASZ,UAAU,cAExC,sBAAKA,UAAU,aAAf,UACI,uBAAOO,QAAQ,aAAf,gCADJ,IAC2D,uBACvD,wBAAQM,SAAUxD,KAAKC,aAAvB,SACKD,KAAKb,MAAMQ,MAAM+C,KAAI,SAACR,EAAMuB,GAAP,OAClB,yBAAQ7C,MAAO6C,EAAf,gCAAsCvB,EAAKtC,YAAY8D,QAAQ,WAC9D,uBACT,8BACI,wBAAQX,QAAS/C,KAAKG,UAAWwC,UAAU,gBAA3C,2BAMZ,qBAAKA,UAAU,SAASf,MAAO,CAAEqB,QAASjD,KAAKb,MAAMG,OAAS,OAAS,QAAvE,6CAKA,qBAAKqD,UAAU,SAASf,MAAO,CAAEqB,QAASjD,KAAKb,MAAMI,OAAS,OAAS,QAAvE,4C,GA1LmBoE,aCC7BC,EAAgB5C,SAAS6C,eAAe,QAE9CC,IAASC,OAEN,8BACG,cAAC,EAAD,MAGDH,K","file":"static/js/main.899b9d26.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport './lista.css'\r\n\r\nimport axios from \"axios\";\r\nexport default class Lista extends Component {\r\n\r\n    state = {\r\n        data: [],\r\n        modalopen: (false),\r\n        modalA: (false),\r\n        modalD: (false),\r\n        indexCartao: \"0\",\r\n        username: \"\",\r\n        userid: \"\",\r\n        cards: [\r\n            // valid card\r\n            {\r\n                card_number: '1111111111111111',\r\n                cvv: 789,\r\n                expiry_date: '01/18',\r\n            },\r\n            // invalid card\r\n            {\r\n                card_number: '4111111111111234',\r\n                cvv: 123,\r\n                expiry_date: '01/20',\r\n            },\r\n        ]\r\n    }\r\n\r\n    // This Function Makes The Fetch at Api For Create The User`s List\r\n\r\n    async componentDidMount() {\r\n\r\n        // functions with bind to keep then updated        \r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.validForm = this.validForm.bind(this);\r\n\r\n        let bodyApi = this.state\r\n\r\n        const api = 'https://www.mocky.io/v2/5d531c4f2e0000620081ddce'\r\n\r\n        const response = await fetch(api)\r\n        const body = await response.json();\r\n        bodyApi.data = body\r\n        this.setState(bodyApi)\r\n    }\r\n\r\n    // Get the Value choosen of card 1 or 2\r\n    handleChange(event) {\r\n        this.setState({ indexCartao: event.target.value });\r\n    }\r\n\r\n    // Opens the User`s Modal With Data of the Selected User\r\n    openModal(user) {\r\n        this.setState({ modalopen: true, username: user.name, userid: user.id })\r\n    }\r\n\r\n    // monetary mask converting to BRL Currency\r\n    mask() {\r\n        document.querySelector(\".spanError\").innerHTML = \"\";\r\n\r\n        let elemento = document.querySelector(\"#worthPayment\");\r\n        let valor = elemento.value;\r\n\r\n        valor = valor + '';\r\n        valor = parseInt(valor.replace(/[\\D]+/g, ''));\r\n        valor = valor + '';\r\n        valor = valor.replace(/([0-9]{2}$)/g, \",$1\");\r\n\r\n        if (valor.length > 6) {\r\n            valor = valor.replace(/([0-9]{3}),([0-9]{2}$)/g, \".$1,$2\");\r\n        }\r\n        elemento.value = valor\r\n\r\n        if (valor === 'NaN') {\r\n            elemento.value = '';\r\n        }\r\n\r\n        if (valor === 'null') {\r\n            elemento.value = '';\r\n        }\r\n\r\n    }\r\n\r\n    // Valid The Form With The Informations Provided And Return Some Error If There`s any \r\n    // Missing Field , If Fields Be Right, Return The Payment Sucess Modal Or Failed Payment Modal.\r\n    validForm() {\r\n\r\n        let worth = document.querySelector(\"#worthPayment\").value;\r\n        let spanError = document.querySelector(\".spanError\");\r\n        let eventerror = false;\r\n\r\n        if (worth === \"\") {\r\n            eventerror = true;\r\n            spanError.innerHTML = \"Digite O Valor\"\r\n        }\r\n\r\n        if (!eventerror) {\r\n\r\n            if (this.state.indexCartao === '1') {\r\n                worth = worth.replace(\".\", \"\").replace(\",\", \".\").toLocaleString('pt-BR', { style: 'currency', currency: 'BRL' })\r\n\r\n                worth = parseFloat(worth)\r\n                document.querySelector('#worthPayment').innerText = \"R$ 0,00\";\r\n                this.setState({ modalA: true })\r\n\r\n                axios.post(\"https://run.mocky.io/v3/533cd5d7-63d3-4488-bf8d-4bb8c751c989\",\r\n                    // Card Info\r\n                    {\r\n                        card: (this.indexCartao),\r\n\r\n                        // Destination User ID\r\n                        destination_user_id: (this.state.userid),\r\n\r\n                        // Value of the Transaction\r\n                        value: (worth),\r\n                    })\r\n                    .then(function (response) {\r\n                    })\r\n                    .catch(function (error) {\r\n                        console.error(error);\r\n                    });\r\n\r\n                //After Payment Sucess , It Makes Payment Sucess Modal and Payment Modal Disappear. \r\n                setTimeout(() => {\r\n                    this.setState({ modalA: false, modalopen: false })\r\n                }, 2000)\r\n            }\r\n\r\n            if (this.state.indexCartao === '0') {\r\n                this.setState({ modalD: true });\r\n\r\n                // Makes The Payment Failed Disappear.\r\n                setTimeout(() => {\r\n                    this.setState({ modalD: false })\r\n                }, 2000)\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n\r\n        const users = this.state.data\r\n\r\n        return (\r\n            <>\r\n                <div >{users.map((user) =>\r\n                    <div className=\"containerList\" >\r\n                        <p className=\"usersList\">\r\n                            <p className=\"containerImg\"><div className=\"idUser\"><strong > ID:</strong>{user.id}</div><img className=\"img\" src={user.img} alt=\"\" />\r\n                                <div className=\"userName\"><strong> {user.username} </strong></div>\r\n                            </p>\r\n                            <p className=\"h2\"> Nome: {user.name}</p>\r\n                            <div className=\"divButton\">\r\n                                <button onClick={() => this.openModal(user)} className=\"button\" >Pagar</button>\r\n                            </div>\r\n                        </p>\r\n                    </div>)}\r\n                </div>\r\n\r\n                {/* MODAL DE SELECAO DE CARTOES */}\r\n                <div onClick={() => { this.setState({ modalopen: false, modalA: false, modalD: false }) }} style={{ display: this.state.modalopen ? \"block\" : \"none\" }} className=\"backdrop\">\r\n\r\n                </div>\r\n                <div style={{ display: this.state.modalopen ? \"flex\" : \"none\" }} className='cardsModal'>\r\n                    <label className=\"labelCardsModal\">Pagando: {this.state.username}</label>\r\n                    <div className=\"inputPayment\" >\r\n                        <label htmlFor=\"worthPayment\">Valor Do Pagamento</label><br />\r\n                        <input onKeyPress={this.mask} id=\"worthPayment\" type=\"text\" placeholder=\"R$  DIGITE O VALOR\" />\r\n                    </div>\r\n                    <div style={{ color: 'red' }} className=\"spanError\"></div>\r\n\r\n                    <div className=\"selectCard\">\r\n                        <label htmlFor=\"cardsLabel\">Selecione o Cartao</label> <br />\r\n                        <select onChange={this.handleChange} >\r\n                            {this.state.cards.map((card, i) =>\r\n                                <option value={i}> Cartao Com Final: {card.card_number.substr(-4)}</option>)}\r\n                        </select><br />\r\n                        <div>\r\n                            <button onClick={this.validForm} className=\"second_button\">Pagar</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* MODAL DE PAGAMENTO REALIZADO COM SUCESSO */}\r\n                <div className=\"modalA\" style={{ display: this.state.modalA ? \"flex\" : \"none\" }} >\r\n                    Pagamento Realizado com Sucesso\r\n                </div>\r\n\r\n                {/* MODAL DE PAGAMENTO COM FALHA */}\r\n                <div className=\"modalD\" style={{ display: this.state.modalD ? \"flex\" : \"none\" }} >\r\n                    Pagamento NAO Realizado\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}","import ReactDOM from \"react-dom\"\r\n// import HeaderHero from \"./components/firstHeader\"\r\nimport Lista from \"./components/Lista\"\r\n// import App from \"./components/Lista\"\r\n\r\nconst rootComponent = document.getElementById(\"root\")\r\n\r\nReactDOM.render(\r\n\r\n   <div>\r\n      <Lista /> \r\n   </div>\r\n\r\n   , rootComponent)"],"sourceRoot":""}